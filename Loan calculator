import argparse
import math

parser = argparse.ArgumentParser()

parser.add_argument('--type', choices=['diff', 'annuity'])

parser.add_argument('--interest', type=float)

parser.add_argument('--periods', type=int)

parser.add_argument('--principal', type=float)

parser.add_argument('--payment', type=float)

args = parser.parse_args()
P = args.principal
n = args.periods
i = args.interest
A = args.payment


inputs = [args.type, args.interest, args.periods, args.principal, args.payment]
if args.type not in ("diff", "annuity"):
    print("Incorrect parameters")

if args.type == "diff":
    if args.payment != None or args.interest == None or args.principal == None or args.periods == None:
        print("Incorrect parameters")
    elif (args.interest < 0 or args.principal < 0 or args.periods < 0):
        print("Incorrect parameters")
    else:
        i = i * (1 / 1200)

        Total_payment = 0
        for m in range(1, n + 1):
            Dm = (P / n) + i * (P - (P * (m - 1)) / n)
            print(f'Month {m} : payment is {math.ceil(Dm)}')
            Total_payment += math.ceil(Dm)

        overpayment = int(Total_payment - P)

        print(f'Overpayment = {overpayment}')

elif args.type == "annuity":

    if args.interest == None:
        print("Incorrect parameters")


    elif args.principal == None:
        if (args.interest < 0 or args.periods < 0 or args.payment < 0):
            print("Incorrect parameters")
        else:
            i = i * (1 / 1200)

            P = A / ((i * math.pow(1 + i, n)) / (math.pow(1 + i, n) - 1))
            print(f'Your loan principal = {P}!')
            A = math.ceil(P * i * (math.pow(1 + i, n)) / (math.pow(1 + i, n) - 1))
            Total_payment = A * n
            overpayment = int(Total_payment - P)
            print(f'Overpayment={overpayment}')

    elif args.periods == None:
        if (args.interest < 0 or args.principal < 0 or args.payment < 0):
            print("Incorrect parameters")
        else:
            i = i * (1 / 1200)

            n = math.ceil(math.log(A / (A - i * P), 1 + i))
            Y = math.floor(n / 12)
            M = math.floor(n % 12)
            if Y > 1 and M > 1:
                print("It will take ", Y, "years and ", M, "months to repair this loan!")
            if Y == 1 and M == 1:
                print("It will take ", Y, "year and ", M, "month to repair this loan!")
            if Y < 1 and M == 1:
                print("It will take ", M, "month to repair this loan!")
            if Y < 1 and M > 1:
                print("It will take ", M, "months to repair this loan!")
            if Y > 1 and M == 0:
                print("It will take ", Y, "years to repair this loan!")
            Total_payment = A * n
            overpayment = int(Total_payment - P)
            print(f'Overpayment={overpayment}')

    elif args.payment == None:
       if (args.interest < 0 or args.principal < 0 or args.periods < 0):
            print("Incorrect parameters")
       else:
            i = i * (1 / 1200)

            A = math.ceil(P * i * (math.pow(1 + i, n)) / (math.pow(1 + i, n) - 1))
            print(f'Your annuity payment ={A}!')
            Total_payment = A * n
            overpayment = int(Total_payment - P)
            print(f'Overpayment={overpayment}')
